# #Бот для фитнеса и здоровья
# Функция: Помогает пользователям отслеживать свою активность и здоровье.
# Команды:
# /workout_plan — Генерирует план тренировок на день.
# /log_workout <упражнение> <количество повторений> — Записывает тренировку пользователя.
# /nutrition_tips — Советы по питанию.
# /water_remi — Устанавливает напоминания о необходимости пить воду.


import telebot
import datetime
import time
import threading

bot = telebot.TeleBot('Здесь должен быть ваш токен ')

@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id, 'Привет! Это бот для фитнеса и здоровья. Чтобы начать, отправь мне /plan.')
    reminder_thread = threading.Thread(target=water_reminder_command, args=(message.chat.id,))
    reminder_thread.start()

@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, 'Доступные команды:\n/start, /plan, /nutrition_tips, /add_exercise, /view_exercises, /help')

@bot.message_handler(commands=['plan'])
def workout_plan_command(message):
    workout_plans = {0: 'Понедельник: Приседания с весом (штанга, гантели) — 4 подхода по 8-10 повторений.\nЖим гантелей или штанги лежа — 4 подхода по 8-10 повторений.',
        1: 'Вторник: Для данного дня не предусмотренны тренировки.',
        2: 'Среда: Тяга штанги в наклоне или подтягивания с весом — 4 подхода по 8-10 повторений.\nПлиометрические отжимания (с хлопком) — 3 подхода по 8 повторений.',
        3: 'Четверг: Для данного дня не предусмотренны тренировки.',
        4: 'Пятница: Подъем на бицепс с гантелями и жим вверх (комбинированное упражнение) — 3 подхода по 10 повторений.\nСтановая тяга (Deadlift) — 4 подхода по 6-8 повторений.\nПодъемы ног в висе на турнике — 3 подхода по 15 повторений.',
        5: 'Суббота: Для данного дня не предусмотренны тренировки.',
        6: 'Воскресенье: Для данного дня не предусмотренны тренировки.'
        
    }
    today = datetime.datetime.now().weekday()
    workout_plan = f'Привет! Ваш рабочий план на сегодня:\n{workout_plans.get(today)}'
    bot.send_message(message.chat.id, workout_plan)

@bot.message_handler(commands=['nutrition_tips'])
def nutrition_tips_command(message):
    bot.send_message(message.chat.id, 'Советы по питанию:\n1. Поддерживайте баланс макронутриентов. Что это значит: Важно потреблять правильное соотношение углеводов, белков и жиров. Углеводы являются основным источником энергии для интенсивных тренировок, белки необходимы для восстановления и роста мышц, а здоровые жиры важны для поддержания гормонального баланса и обеспечения энергии на длительных тренировках.\n Рекомендация: Старайтесь, чтобы углеводы составляли 45-65% от общего потребления калорий, белки — 10-35%, а жиры — 20-35%, в зависимости от типа и интенсивности тренировок. \n2. Оставайтесь гидратированными. Что это значит: Вода играет ключевую роль в регулировании температуры тела, транспортировке питательных веществ и удалении отходов. Спортсмены теряют больше жидкости через потоотделение, особенно при интенсивных или длительных тренировках. Рекомендация: Пейте воду в течение всего дня, а также до, во время и после тренировок. Для тренировок продолжительностью более часа или в жаркую погоду добавьте электролиты для замены потерянных солей. \n3. Питайтесь правильно до и после тренировок. Что это значит: Питание перед тренировкой дает энергию, необходимую для выполнения упражнений, а питание после тренировки помогает восстановить мышцы и восполнить запасы гликогена. Рекомендация: За 1-2 часа до тренировки съешьте углеводный перекус с низким содержанием жиров, например, банан с овсянкой. После тренировки в течение 30 минут примите комбинацию белков и углеводов (например, куриная грудка с рисом), чтобы помочь мышцам восстановиться. \n4. Обращайте внимание на микронутриенты. Что это значит: Витамины и минералы играют важную роль в метаболических процессах и восстановлении. Железо, кальций, магний, витамины D и C особенно важны для спортсменов. Рекомендация: Включите в рацион разнообразные продукты: зелёные листовые овощи (для железа и кальция), орехи и семена (для магния), цитрусовые и ягоды (для витамина C), молочные продукты или альтернативные источники (для витамина D и кальция). \n 5. Следите за потреблением калорий и адаптируйте его под свои тренировки. Что это значит: Потребление слишком малого количества калорий может привести к снижению энергии и ухудшению спортивных результатов, в то время как переедание может привести к нежелательному увеличению веса. Рекомендация: Рассчитайте свои энергетические потребности в зависимости от уровня активности, возраста, пола и целей. Для точного подсчета можно использовать онлайн-калькуляторы калорий или проконсультироваться с диетологом. Важно прислушиваться к своему телу и адаптировать питание в зависимости от интенсивности тренировок и целей (набор массы, поддержание формы или снижение веса).')

def water_reminder_command(chat_id):
    rem = datetime.datetime.now() + datetime.timedelta(minutes=30)
    while True:
        i = datetime.datetime.now()
        if i >= rem:
            bot.send_message(chat_id, 'Пора пить воду!')
            rem = datetime.datetime.now() + datetime.timedelta(minutes=30)
        time.sleep(61)
        time.sleep(1)

exercise_list = []

@bot.message_handler(commands=['add_exercise'])
def add_exercise(message):
    bot.send_message(message.chat.id, 'Пожалуйста, введите информацию о сделанных упражнениях в формате: "Упражнение: название, количество повторений, время (мин)"')


@bot.message_handler(content_types=['text'])
def handle_text_message(message):

    if message.text.lower().startswith('упражнение:'):
        exercise_list.append(message.text)
        bot.send_message(message.chat.id, 'Информация о упражнении добавлена!')

    elif message.text.lower() == '/view_exercises':
        if exercise_list:
            exercises = '\n'.join(exercise_list)
            bot.send_message(message.chat.id, f'Список сделанных упражнений:\n{exercises}')
        else:
            bot.send_message(message.chat.id, 'Вы еще не добавили ни одного упражнения.')

    else:
        bot.send_message(message.chat.id, 'Я не знаю, что это за информация. Вы можете использовать команду /help для получения справки.')


bot.polling(none_stop=True)

